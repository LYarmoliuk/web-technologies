1. Що таке коміт у Git і які основні компоненти він містить?
   Коміт у Git – це зафіксований стан коду, який зберігається в репозиторії. Основні компоненти коміту:
   - Хеш-код (SHA) – унікальний ідентифікатор коміту.
   - Автор коміту.
   - Час створення.
   - Повідомлення коміту – короткий опис змін.
   - Посилання на попередній коміт (крім першого).

2. Як створити нову гілку у локальному репозиторії Git і переключитися на неї?
   - Для створення нової гілки: `git branch <branch_name>`.
   - Для переключення на неї: `git checkout <branch_name>`.
   - Можна зробити це однією командою: `git checkout -b <branch_name>`.

3. Яка команда використовується для синхронізації локального репозиторію з віддаленим репозиторієм на GitHub?
   - Для завантаження змін з віддаленого репозиторію: `git pull`.
   - Для завантаження локальних змін до віддаленого репозиторію: `git push`.

4. Що таке pull request (PR) і які його основні цілі при роботі з GitHub?
   Pull request – це запит на злиття змін із однієї гілки в іншу (зазвичай із власної гілки в основну). Основні цілі:
   - Перевірка коду командою перед злиттям.
   - Обговорення змін та внесення виправлень.
   - Інтеграція змін у головну гілку після затвердження.

5. Як вирішити конфлікти при злитті гілок у Git?
   - Спочатку потрібно виконати `git merge <branch_name>`.
   - Якщо виникає конфлікт, Git позначить файли, що мають конфлікти.
   - Відкрити файли, виправити конфлікти вручну, видаляючи конфліктуючі блоки коду.
   - Після виправлення файлів зробіть коміт: `git add .` і `git commit`.

6. Що таке форк репозиторію і як він використовується в контексті GitHub?
   Форк – це копія чужого репозиторію на вашому акаунті GitHub. Він дозволяє вам:
   - Вносити зміни в проект без впливу на оригінальний репозиторій.
   - Після внесення змін можна створити pull request для їх інтеграції в оригінальний проект.

7. Як можна переглянути історію комітів у Git?
   За допомогою команди `git log`. Вона відобразить список комітів з їхнім хешем, автором, датою і повідомленням.
